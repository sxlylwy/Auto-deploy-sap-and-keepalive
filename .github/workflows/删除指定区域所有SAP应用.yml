name: 删除指定区域所有SAP应用

on:
  workflow_dispatch:  # 允许手动触发
    inputs:
      region:
        description: '选择要删除应用的区域 (SG 或 US)'
        required: true
        default: 'SG'
        type: choice
        options:
        - SG
        - US
      confirmation:
        description: '请输入 "确认删除" 以确认操作'
        required: true
        type: string

jobs:
  delete-apps:
    runs-on: ubuntu-latest
    name: Delete Apps from ${{ github.event.inputs.region }}
    
    steps:
    - name: 验证确认短语
      run: |
        if [ "${{ github.event.inputs.confirmation }}" != "确认删除" ]; then
          echo "错误：必须输入 '确认删除' 来确认操作"
          exit 1
        fi

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install CF CLI
      run: |
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install -y cf8-cli

    - name: Set environment variables
      run: |

        if [ "${{ github.event.inputs.region }}" = "SG" ]; then
          echo "CF_API=https://api.cf.ap21.hana.ondemand.com" >> $GITHUB_ENV
        elif [ "${{ github.event.inputs.region }}" = "US" ]; then
          echo "CF_API=https://api.cf.us10-001.hana.ondemand.com" >> $GITHUB_ENV
        fi

    - name: Login to Cloud Foundry
      run: |
        # 先登录以获取组织列表（需要用户名密码）
        if [ "${{ github.event.inputs.region }}" = "SG" ]; then
          cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
        elif [ "${{ github.event.inputs.region }}" = "US" ]; then
          cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"
        fi

        # 获取组织列表
        ORG=$(cf orgs | sed -n '4p')
        echo "Selected org: $ORG"
        echo "ORG=$ORG" >> $GITHUB_ENV

        # 获取空间列表
        SPACE=$(cf spaces | sed -n '4p')
        echo "Selected space: $SPACE"
        echo "SPACE=$SPACE" >> $GITHUB_ENV

        # 使用获取的组织和空间重新登录
        cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}" -o "$ORG" -s "$SPACE"

    - name: 获取所有应用
      id: get-apps
      run: |
        # 获取所有应用名称（跳过前 3 行提示和表头）
        apps=$(cf apps | awk 'NR>3 {print $1}' | grep -v '^$')
        echo "发现的应用:"
        echo "$apps"
        
        # 检查是否有应用
        if [ -z "$apps" ]; then
          echo "在区域 ${{ github.event.inputs.region }} 中未找到任何应用"
          echo "has_apps=false" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "has_apps=true" >> $GITHUB_OUTPUT
        fi
        
        # 直接输出到 GITHUB_OUTPUT（多行字符串）
        echo "apps<<EOF" >> $GITHUB_OUTPUT
        echo "$apps" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 删除所有应用
      if: steps.get-apps.outputs.has_apps == 'true'
      run: |
        # 从上一步获取应用列表
        apps="${{ steps.get-apps.outputs.apps }}"
        
        echo "正在删除区域 ${{ github.event.inputs.region }} 中的应用:"
        echo "$apps"
        
        # 删除每个应用
        for app in $apps; do
          echo "正在删除应用: $app"
          cf delete -f -r "$app"  # -f 强制删除，不需要确认；-r 同时删除关联的路由
          echo "应用 $app 删除成功"
          echo "----------------------------------------"
          sleep 10  # 每个应用之间等待 10 秒
        done

    - name: 验证应用已删除
      run: |
        echo "区域 ${{ github.event.inputs.region }} 中剩余的应用:"
        cf apps
